#!/usr/bin/lua

local uci = require('simple-uci').cursor()

if uci:get('autoupdater', 'settings', 'branch') ~= 'testing' then
  return
end

local platform_info = require('platform_info')

function Set (list)
  local set = {}
  for _, l in ipairs(list) do set[l] = true end
  return set
end

local update_branch = false

-- These routers were introduced since the last major
-- release, so if you wanted to use them you had to
-- use an experimental image.
local new_models = Set {
  'avm-fritz-box-4040',
  'avm-fritz-wlan-repeater-300e',
  'avm-fritz-wlan-repeater-450e',
  'd-link-dir-860l-b1',
  'gl.inet-gl-b1300',
  'gl-mt300n-v2',
  'netgear-ex6100v2',
  'netgear-ex6150v2',
  'netgear-r6120',
  'nexx-wt3020-8m',
  'ocedo-koala',
  'openmesh-a42',
  'openmesh-a62',
  'tp-link-archer-c50-v3',
  'tp-link-archer-c50-v4',
  'tp-link-archer-c7-v5',
  'tp-link-tl-wr810n-v1',
  'tp-link-tl-wr841n-v13',
  'ubiquiti-unifi-ac-mesh-pro',
  'zbt-wg3526-16m',
  'zbt-wg3526-32m',
  'zyxel-nbg6616',
  'zyxel-nbg6617',
  'zyxel-wre6606'
}

if new_models[platform_info.get_image_name()] then
  update_branch = true  
  print('[+] device was introduced after latest stable release')
end


if update_branch then
  uci:set('autoupdater', 'settings', 'branch', 'stable')
  uci:save('autoupdater')
  print('[+] autoupdater branch set to stable')
end

